version: "3"

services:
  db: # https://hub.docker.com/_/postgres/
    image: postgres:10-alpine
    env_file: .env
    ports:
    - 5432:5432
    restart: always
    volumes:
    - pgdata:${PGDATA}

  migration: # https://hub.docker.com/r/kamilsk/click/
    build:
      context: ../.
      dockerfile: ./env/Dockerfile
    command: [ "migrate", "up", "--with-demo" ]
    depends_on:
    - db
    env_file: .env
    restart: on-failure

  service: # https://hub.docker.com/r/kamilsk/click/
    build:
      context: ../.
      dockerfile: ./env/Dockerfile
    command: [ "run", "--with-profiler", "--with-monitoring" ]
    depends_on:
    - migration
    env_file: .env
    restart: always
    ports:
    - 8080:${PORT}
    - 8090:8090
    - 8091:8091

#  server: # https://hub.docker.com/r/kamilsk/nginx/
#    image: kamilsk/nginx:alpine
#    entrypoint: |
#      /bin/sh -c "envsubst '$$SERVICE_HOST $$SERVICE_PORT $$DOMAIN_NAME $$DOMAIN_PORT' \
#                  < /etc/nginx/conf.d/service.template > /etc/nginx/conf.d/service.conf \
#                  && /entrypoint.sh"
#    env_file: .env
#    ports:
#    - 80:${DOMAIN_PORT}
#    restart: always
#    volumes:
#    - ./etc/nginx.conf:/etc/nginx/nginx.conf:ro
#    - ./etc/service.conf:/etc/nginx/conf.d/service.template:ro
#    - certificates:/etc/nginx/ssl
#    - le_challenge:/usr/share/sites/${DOMAIN_NAME}

volumes:
  pgdata:
    driver: local

  certificates:
    driver: local

  le_challenge:
    driver: local
